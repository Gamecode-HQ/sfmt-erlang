{"name":"sfmt-erlang","tagline":"sfmt-erlang: SIMD-oriented Fast Mersenne Twister (SFMT) for Erlang","body":"# sfmt-erlang: SIMD-oriented Fast Mersenne Twister (SFMT) for Erlang\r\n\r\n* Version 0.8.2\\_RELEASE 28-MAY-2012 (README last modified 22-FEB-2014)\r\n* Edited and written by Kenji Rikitake (Kyoto University)\r\n* Email contact: <kenji.rikitake@acm.org>\r\n\r\nCopyright (c) 2010-2014 Kenji Rikitake and Kyoto University. All rights\r\nreserved.\r\n\r\nCopyright (c) 2006,2007 Mutsuo Saito, Makoto Matsumoto and Hiroshima\r\nUniversity. All rights reserved.\r\n\r\nSee the file `LICENSE` for the license (new/simplified BSD license). (Note:\r\nlicense of rebar is Apache 2.0 License.)\r\n\r\nThis software is based on SFMT ver. 1.3.3 (SIMD oriented Fast Mersenne\r\nTwister(SFMT)) by Mutsuo Saito (Hiroshima University) and Makoto\r\nMatsumoto (Hiroshima University)\r\n\r\n## Details of SFMT algorithm\r\n\r\nSee <http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index.html>\r\n\r\n* new module sfmt607 and sfmt216091 added (from 0.5.1\\_RELEASE)\r\n* new module sfmt4253 added (from 0.5.3\\_RELEASE)\r\n* new module sfmt86243 added (from 0.6.1\\_BETA)\r\n* Pure SFMT module now added as working code by request (from 0.8.0\\_RELEASE)\r\n\r\n## Seeding algorithm changed for `seed(integer())` functions\r\n\r\n* The old `seed/1` function called `init_gen_rand/1` (up to 0.8.0\\_RELEASE)\r\n* The internal state generated by `init_gen_rand/1` is predictable,\r\n  especially when the value of the 1st element of the state list is\r\n  very close to the given seed value. \r\n  (Michael Gebetsroither discovered this behavior)\r\n* The new `seed/1` function calls `init_by_list32/1` (from 0.8.1\\_RELEASE)\r\n  and the seed is given as `[integer()]`,\r\n  to reduce predictability of the 1st element of the state list.\r\n\r\n## Supported SFMT PRNG periods\r\n\r\n* sfmt607: (2^607 - 1)\r\n* sfmt4253: (2^4253 - 1)\r\n* sfmt: (2^19937 - 1) (also on sfmt\\_pure)\r\n* sfmt86243: (2^86243 - 1)\r\n* sfmt216091: (2^216091 - 1)\r\n\r\n## C NIFs based on SFMT 1.3.3 added (from 0.3.0\\_RELEASE)\r\n\r\n* See `c_src/sfmt_nif.c` for the details\r\n* Also refer to sfmt-extstate at <http://github.com/jj1bdx/sfmt-extstate>\r\n* The version number of this NIF is 101 (see `NIF_LOAD_INFO` macro value)\r\n\r\n## Wichmann-Hill 2006 algorithm code also included (from 0.6.0\\_RELEASE)\r\n\r\n* See `src/random_wh06.erl` for the details\r\n* Reference for the algorithm:\r\n\r\n    B. A. Wichmann and I. D. Hill,\r\n    \"Generating good pseudo-random numbers\",\r\n    Computational Statistics & Data Analysis 51 (2006) 1614-1622.    \r\n\r\n* See `src/random_wh06_int.erl` for a bigint version (by Michael Truog)\r\n\r\n    Note: this bigint version is not tested yet (no eunit test case)\r\n\r\n## Simple test of 512x512 pixmap included (from 0.6.2\\_RELEASE)\r\n\r\n* see the files under `reference_texts/pbm_512_512/` for the details\r\n\r\n## Notable bugfixes\r\n\r\n* `gen_rand_all/1` is now properly applied in `sfmt_pure` module when `gen_rand32/1` was first invoked (from 0.8.2\\_RELEASE)\r\n* Catched up with the latest rebar configuration file (from 0.7.0\\_RELEASE)\r\n* Dynamically building ebin/sfmt.app (from 0.7.0\\_RELEASE)\r\n* PDIC\\_SEED now named differently for each period (bugfix, from 0.5.2\\_RELEASE)\r\n\r\n## Tested platforms\r\n\r\n* FreeBSD/amd64 10-STABLE with Erlang/OTP R16B03-1 and 17.0-rc1\r\n* OS X 10.9.1 Mavericks with Erlang/OTP R16B03-1 and 17.0-rc1\r\n\r\n### Past tested platforms\r\n\r\n* FreeBSD/amd64 9-STABLE with Erlang/OTP R16B02\r\n* FreeBSD/i386 8-STABLE with Erlang/OTP R15B03\r\n* Ubuntu Linux x86\\_64 12.10 with Erlang/OTP R16B\r\n\r\n## Building \r\n\r\n* Use GNU/BSD make and then\r\n\r\n    make compile\r\n\r\nThe build script is Basho's rebar at <https://github.com/basho/rebar>,\r\nwhich will be automatically fetched under the directory `support/`.\r\n\r\n## Documentation\r\n\r\n* For the HTML documentation files of the Erlang source \r\n\r\n    make doc\r\n\r\n    The documentation will be accessible at `doc/index.html`.\r\n\r\n* For the HTML documentation files of the C NIF source (Note: Doxygen required)\r\n\r\n    make c_doc\r\n\r\n    The documentation will be accessible at `c_doc/index.html`.\r\n\r\n## Testing\r\n\r\n* For unit testing with EUnit, do\r\n\r\n    make eunit\r\n\r\n* For testing the speed of 100 times of invoking 100000 `gen_rand32/1` function, do \r\n\r\n    make speed\r\n\r\n    (Previously this was 1000 times x 100000 invocations, but that was practically too slow.)\r\n\r\n## API compatible with the random module\r\n\r\n    seed0, seed/0, seed/3, uniform/0, uniform/1, uniform_s/1, uniform_s/3 \r\n\r\n## TODO\r\n\r\n* No more new feature; more load testing needed\r\n* More documentation\r\n* Code upgrading/reloading behavior check\r\n\r\n## Code authors:\r\n\r\n* Kenji Rikitake\r\n* Mutsuo Saito\r\n* Makoto Matsumoto\r\n* Dan Gudmundsson\r\n* Michael Truog\r\n\r\n## THANKS to:\r\n\r\n* Dave \"dizzyd\" Smith\r\n* Tuncer Ayaz\r\n* Tim Bates (random\\_mt.erl implementator of Mersenne Twister)\r\n* Dan Gudmundsson\r\n* Richard O'Keefe\r\n* Yurii Rashkovskii\r\n* Kostis Sagonas\r\n* Michael Gebetsroither\r\n* Shunichi Shinohara\r\n\r\n## ACKNOWLEDGMENTS\r\n\r\nDuring the compatibility test of this software, Kenji Rikitake\r\nused the supercomputer service provided by Academic Center for\r\nComputing and Media Studies (ACCMS), Kyoto University.\r\n\r\nErlang Solutions kindly gave Kenji Rikitake\r\nan opportunity to give a presentation\r\nabout this software at Erlang Factory SF Bay 2011.\r\n\r\n## Notes on refactoring\r\n\r\n* Speedup by NIF: ~40 times faster than the pure Erlang code\r\n  (when fully inline-optimized (see rebar.config))\r\n* For the pure-Erlang code: writing `++` (append) operators by ring buffer loops\r\n  (as a pair of lists consuming the head elements, and the corresponding accumulators)\r\n  made the code ~50% faster; the pure Erlang code available under `reference_texts/`\r\n* `gen_rand32/1`, `gen_rand32_max/2`, and `gen_rand_float/1` use Erlang lists \r\n  (Dan Gudmudsson showed the list version is faster)\r\n* SSE2 code and options in sfmt-extstate were removed due to causing crash of Erlang BEAM\r\n  (and even if the SSE2 code was enabled the performance increase would be minimal)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}